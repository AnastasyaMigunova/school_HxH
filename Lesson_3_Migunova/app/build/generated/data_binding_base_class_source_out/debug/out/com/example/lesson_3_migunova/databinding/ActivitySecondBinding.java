// Generated by view binder compiler. Do not edit!
package com.example.lesson_3_migunova.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.lesson_3_migunova.R;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.appbar.MaterialToolbar;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySecondBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final AppBarLayout appBar;

  @NonNull
  public final AppCompatButton exitButton;

  @NonNull
  public final TwoTextViewsBinding includeEmail;

  @NonNull
  public final ImageTextViewsBinding includeInfo;

  @NonNull
  public final TwoTextViewsBinding includeLogin;

  @NonNull
  public final TwoTextViewsBinding includeName;

  @NonNull
  public final TwoTextViewsBinding includeRegion;

  @NonNull
  public final TwoTextViewsBinding includeSurname;

  @NonNull
  public final TextView textViewPersonal;

  @NonNull
  public final MaterialToolbar toolbar;

  private ActivitySecondBinding(@NonNull LinearLayout rootView, @NonNull AppBarLayout appBar,
      @NonNull AppCompatButton exitButton, @NonNull TwoTextViewsBinding includeEmail,
      @NonNull ImageTextViewsBinding includeInfo, @NonNull TwoTextViewsBinding includeLogin,
      @NonNull TwoTextViewsBinding includeName, @NonNull TwoTextViewsBinding includeRegion,
      @NonNull TwoTextViewsBinding includeSurname, @NonNull TextView textViewPersonal,
      @NonNull MaterialToolbar toolbar) {
    this.rootView = rootView;
    this.appBar = appBar;
    this.exitButton = exitButton;
    this.includeEmail = includeEmail;
    this.includeInfo = includeInfo;
    this.includeLogin = includeLogin;
    this.includeName = includeName;
    this.includeRegion = includeRegion;
    this.includeSurname = includeSurname;
    this.textViewPersonal = textViewPersonal;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySecondBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySecondBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_second, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySecondBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.app_bar;
      AppBarLayout appBar = ViewBindings.findChildViewById(rootView, id);
      if (appBar == null) {
        break missingId;
      }

      id = R.id.exit_button;
      AppCompatButton exitButton = ViewBindings.findChildViewById(rootView, id);
      if (exitButton == null) {
        break missingId;
      }

      id = R.id.include_email;
      View includeEmail = ViewBindings.findChildViewById(rootView, id);
      if (includeEmail == null) {
        break missingId;
      }
      TwoTextViewsBinding binding_includeEmail = TwoTextViewsBinding.bind(includeEmail);

      id = R.id.include_info;
      View includeInfo = ViewBindings.findChildViewById(rootView, id);
      if (includeInfo == null) {
        break missingId;
      }
      ImageTextViewsBinding binding_includeInfo = ImageTextViewsBinding.bind(includeInfo);

      id = R.id.include_login;
      View includeLogin = ViewBindings.findChildViewById(rootView, id);
      if (includeLogin == null) {
        break missingId;
      }
      TwoTextViewsBinding binding_includeLogin = TwoTextViewsBinding.bind(includeLogin);

      id = R.id.include_name;
      View includeName = ViewBindings.findChildViewById(rootView, id);
      if (includeName == null) {
        break missingId;
      }
      TwoTextViewsBinding binding_includeName = TwoTextViewsBinding.bind(includeName);

      id = R.id.include_region;
      View includeRegion = ViewBindings.findChildViewById(rootView, id);
      if (includeRegion == null) {
        break missingId;
      }
      TwoTextViewsBinding binding_includeRegion = TwoTextViewsBinding.bind(includeRegion);

      id = R.id.include_surname;
      View includeSurname = ViewBindings.findChildViewById(rootView, id);
      if (includeSurname == null) {
        break missingId;
      }
      TwoTextViewsBinding binding_includeSurname = TwoTextViewsBinding.bind(includeSurname);

      id = R.id.text_view_personal;
      TextView textViewPersonal = ViewBindings.findChildViewById(rootView, id);
      if (textViewPersonal == null) {
        break missingId;
      }

      id = R.id.toolbar;
      MaterialToolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivitySecondBinding((LinearLayout) rootView, appBar, exitButton,
          binding_includeEmail, binding_includeInfo, binding_includeLogin, binding_includeName,
          binding_includeRegion, binding_includeSurname, textViewPersonal, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
